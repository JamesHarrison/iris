#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
    # Assumes you're using Thin- tweak if you're using unicorn or similar
    upstream thin {
        server 127.0.0.1:3000;
    }
    server {
        listen       81;
        server_name  localhost perfidy 192.168.0.52; # Adjust to taste
        root /home/james/iris/public;

        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            if (!-f $request_filename) {
                proxy_pass http://thin;
                break;
            }
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
        client_max_body_size 100m;
        location /uploads/send_file {
          # Pass altered request body to this location
          upload_pass   /;

          # Store files to this directory (set this up in config/settings.yml path_to_uploads)
          upload_store /tmp;

          upload_store_access user:rw group:rw all:rw;

          # Set specified fields in request body
          upload_set_form_field $upload_field_name.name "$upload_file_name";
          upload_set_form_field $upload_field_name.content_type "$upload_content_type";
          upload_set_form_field $upload_field_name.path "$upload_tmp_path";

          # Inform backend about hash and size of a file
          upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
          upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";
          upload_pass_form_field "^X-Progress-ID$|^authenticity_token$|^cart_start$|^cart_finish$|^submit$";

          upload_cleanup 400 404 499 500-505;
      }

    }
}
